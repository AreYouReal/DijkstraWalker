Задача сводится к решению о нахождении минимального расстояния между точками в графе.
Города - узлы графа. Стоимость безина - вес каждой грани графа.
Для подобных задач используется Dijkstra's algorithm как наиболее оптимальный и универсальный.
Алгоритмы поисков "depth first", "breadth first", "best first", "A*", "Manhattan" не подходят по причине большой сложности (Big O notation) и/или невозможности вывести сколько-нибудь правдивую эевристическую функцию для работы "best first"/"A*"/"Manhattan" алгоритмов. 

Сложность алгоритма: Worst-case O( E + V * Log(V)), где E - количество граней графа(дорог между городами), а V - количество узлов(городов).

Много или мало дорог - ничего бы не изменил. Но буду рад узнать, если можно как-то улучшить текущую реализацию. 

P.S. Реализация DijkstraWalker позволяет(при крошечных манипуляциях с кодом) использовать этот алгоритм в Coroutine, если говорить о Unity. 
